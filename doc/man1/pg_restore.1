.\\" auto-generated by docbook2man-spec $Revision: 1.25 $
.TH "PG_RESTORE" "1" "2001-03-06" "Application" "PostgreSQL Client Applications"
.SH NAME
pg_restore \- restore a PostgreSQL database from an archive file created by pg_dump
.SH SYNOPSIS
.sp
\fBpg_restore\fR\fR [ \fR\fB\fIoptions\fB\fR...\fB \fR\fR]\fR
.SH "DESCRIPTION"
.PP
\fBpg_restore\fR is a utility for restoring a
PostgreSQL database from an archive
created by \fBpg_dump\fR(1) in one of the non-plain-text
formats. It
will issue the commands necessary to re-generate all user-defined
types, functions, tables, indexes, aggregates, and operators, as
well as the data in the tables.
.PP
The archive files contain information for
\fBpg_restore\fR to rebuild the database, but also
allow \fBpg_restore\fR to be selective about what is
restored, or even to reorder the items prior to being restored. The
archive files are designed to be portable across architectures.
.PP
\fBpg_restore\fR can operate in two modes: If a
database name is specified, the archive is restored directly into
the database. Otherwise, a script containing the SQL commands
necessary to rebuild the database is created (and written to a file
or standard output), similar to the ones created by the
\fBpg_dump\fR plain text format. Some of the options
controlling the script output are therefore analogous to
\fBpg_dump\fR options.
.PP
Obviously, \fBpg_restore\fR cannot restore information
that is not present in the archive file; for instance, if the
archive was made using the ``dump data as
\fBINSERT\fRs'' option,
\fBpg_restore\fR will not be able to load the data
using \fBCOPY\fR statements.
.SH "OPTIONS"
.PP
\fBpg_restore\fR accepts the following command
line arguments. (Long option forms are only available on some platforms.)
.TP
\fB\fIarchive-name\fB\fR
Specifies the location of the archive file to be restored.
If not specified, the standard input is used.
.TP
\fB-a\fR
.TP
\fB--data-only\fR
Restore only the data, no schema (definitions).
.TP
\fB-c\fR
.TP
\fB--clean\fR
Clean (drop) database objects before recreating them.
.TP
\fB-C\fR
.TP
\fB--create\fR
Create the database before restoring into it. (When this
switch appears, the database named with \fB-d\fR is
used only to issue the initial CREATE DATABASE
command. All data is restored into the database name that
appears in the archive.)
.TP
\fB-d \fIdbname\fB\fR
.TP
\fB--dbname=\fIdbname\fB\fR
Connect to database \fIdbname\fR and restore directly
into the database. Large objects can only be restored by using
a direct database connection.
.TP
\fB-f \fIfilename\fB\fR
.TP
\fB--file=\fIfilename\fB\fR
Specify output file for generated script, or for the listing
when used with \fB-l\fR. Default is the standard
output.
.TP
\fB-F \fIformat\fB\fR
.TP
\fB--format=\fIformat\fB\fR
Specify format of the archive. It is not necessary to specify
the format, since \fBpg_restore\fR will
determine the format automatically. If specified, it can be
one of the following:
.RS
.TP
\fBt\fR
Archive is a \fItar\fR archive. Using this
archive format allows reordering and/or exclusion of schema
elements at the time the database is restored. It is also
possible to limit which data is reloaded at restore time.
.TP
\fBc\fR
Archive is in the custom format of
\fBpg_dump\fR. This is the most
flexible format in that it allows reordering of data load
as well as schema elements. This format is also compressed
by default.
.RE
.PP
.TP
\fB-i\fR
.TP
\fB--ignore-version\fR
Ignore database version checks.
.TP
\fB-I \fIindex\fB\fR
.TP
\fB--index=\fIindex\fB\fR
Restore definition for named \fIindex\fR only.
.TP
\fB-l\fR
.TP
\fB--list\fR
List the contents of the archive. The output of this command
can be used with the \fB-L\fR option to restrict
and reorder the items that are restored.
.TP
\fB-L \fIlist-file\fB\fR
.TP
\fB--use-list=\fIlist-file\fB\fR
Restore elements in \fIlist-file\fR only, and in the
order they appear in the file. Lines can be moved and may also
be commented out by placing a ; at the
start of the line.
.TP
\fB-N\fR
.TP
\fB--orig-order\fR
Restore items in the original dump order. By default
\fBpg_dump\fR will dump items in an order
convenient to \fBpg_dump\fR, then save the
archive in a modified OID order. This option overrides the OID
ordering.
.TP
\fB-o\fR
.TP
\fB--oid-order\fR
Restore items in the OID order. By default
\fBpg_dump\fR will dump items in an order
convenient to \fBpg_dump\fR, then save the
archive in a modified OID order. This option enforces strict
OID ordering.
.TP
\fB-O\fR
.TP
\fB--no-owner\fR
Prevent any attempt to restore original object
ownership. Objects will be owned by the user name used to
attach to the database.
.TP
\fB-P \fIfunction-name(argtype [, ...])\fB\fR
.TP
\fB--function=\fIfunction-name(argtype [, ...])\fB\fR
Specify a procedure or function to be restored.
.TP
\fB-r\fR
.TP
\fB--rearrange\fR
Restore items in modified OID order. By default
\fBpg_dump\fR will dump items in an order
convenient to \fBpg_dump\fR, then save the
archive in a modified OID order. Most objects will be restored
in OID order, but some things (e.g., rules and indexes) will
be restored at the end of the process irrespective of their
OIDs. This option is the default.
.TP
\fB-R\fR
.TP
\fB--no-reconnect\fR
While restoring an archive, \fBpg_restore\fR
typically has to reconnect to the database several times with
different user names to set the correct ownership of the
created objects. If this is undesirable (e.g., because manual
interaction (passwords) would be necessary for each
reconnection), this option prevents
\fBpg_restore\fR from issuing any reconnection
requests. (A connection request while in plain text mode, not
connected to a database, is made by putting out a \fBpsql\fR(1) \fB\\connect\fR command.)
However, this option is a rather blunt instrument because it
makes \fBpg_restore\fR lose all object ownership
information, \fBunless\fR you use the
\fB-X use-set-session-authorization\fR option.
.TP
\fB-s\fR
.TP
\fB--schema-only\fR
Restore the schema (definitions), no data. Sequence values will be reset.
.TP
\fB-S \fIusername\fB\fR
.TP
\fB--superuser=\fIusername\fB\fR
Specify the superuser user name to use when disabling triggers.
This is only relevant if \fB--disable-triggers\fR is used.
.TP
\fB-t \fItable\fB\fR
.TP
\fB--table=\fItable\fB\fR
Restore schema/data for \fItable\fR only.
.TP
\fB-T \fItrigger\fB\fR
.TP
\fB--trigger=\fItrigger\fB\fR
Restore definition of \fItrigger\fR only.
.TP
\fB-v\fR
.TP
\fB--verbose\fR
Specifies verbose mode.
.TP
\fB-x\fR
.TP
\fB--no-privileges\fR
.TP
\fB--no-acl\fR
Prevent restoration of access privileges (grant/revoke commands).
.TP
\fB-X use-set-session-authorization\fR
.TP
\fB--use-set-session-authorization\fR
Normally, if restoring an archive requires altering the
current database user (e.g., to set correct object
ownerships), a new connection to the database must be opened,
which might require manual interaction (e.g., passwords). If
you use the \fB-X use-set-session-authorization\fR option,
then \fBpg_restore\fR will instead use the SET SESSION AUTHORIZATION [\fBset_session_authorization\fR(7)] command. This has
the same effect, but it requires that the user restoring the
archive is a database superuser. This option effectively
overrides the \fB-R\fR option.
.TP
\fB-X disable-triggers\fR
.TP
\fB--disable-triggers\fR
This option is only relevant when performing a data-only restore.
It instructs \fBpg_restore\fR to execute commands
to temporarily disable triggers on the target tables while
the data is reloaded. Use this if you have referential
integrity checks or other triggers on the tables that you
do not want to invoke during data reload.

Presently, the commands emitted for \fB--disable-triggers\fR
must be done as superuser. So, you should also specify
a superuser name with \fB-S\fR, or preferably specify
\fB--use-set-session-authorization\fR and run
\fBpg_restore\fR as a PostgreSQL superuser.
.PP
.PP
\fBpg_restore\fR also accepts
the following command line arguments for connection parameters:
.TP
\fB-h \fIhost\fB\fR
.TP
\fB--host=\fIhost\fB\fR
Specifies the host name of the machine on which the server is
running. If host begins with a slash, it is used as the
directory for the Unix domain socket.
.TP
\fB-p \fIport\fB\fR
.TP
\fB--port=\fIport\fB\fR
Specifies the Internet TCP/IP port or local Unix domain socket
file extension on which the server is listening for
connections. The port number defaults to 5432, or the value
of the \fBPGPORT\fR environment variable (if set).
.TP
\fB-U \fIusername\fB\fR
Connect as the given user
.TP
\fB-W\fR
Force a password prompt. This should happen automatically if
the server requires password authentication.
.PP
.SH "ENVIRONMENT"
.TP
\fBPGHOST\fR
.TP
\fBPGPORT\fR
.TP
\fBPGUSER\fR
Default connection parameters.
.SH "DIAGNOSTICS"
.sp
.nf
Connection to database 'template1' failed.
connectDBStart() -- connect() failed: No such file or directory
        Is the postmaster running locally
        and accepting connections on Unix socket '/tmp/.s.PGSQL.5432'?
.sp
.fi
.PP
\fBpg_restore\fR could not attach to the
PostgreSQL server
process on the specified host and port. If you see this message,
ensure that the server
is running on the proper host and that you have specified the proper
port. If your site uses an authentication system, ensure that you
have obtained the required authentication credentials.
.sp
.RS
.B "Note:"
When a direct database connection is specified using the -d
option, \fBpg_restore\fR internally executes
SQL statements. If you have problems running
\fBpg_restore\fR, make sure you are able to select
information from the database using, for example,
\fBpsql\fR.
.RE
.sp
.SH "NOTES"
.PP
If your installation has any local additions to the
template1 database, be careful to load the output of
\fBpg_restore\fR into a truly empty database;
otherwise you are likely to get errors due to duplicate definitions
of the added objects. To make an empty database without any local
additions, copy from template0 not template1, for example:
.sp
.nf
CREATE DATABASE foo WITH TEMPLATE = template0;
.sp
.fi
.PP
The limitations of \fBpg_restore\fR are detailed below.
.TP 0.2i
\(bu
When restoring data to a pre-existing table, \fBpg_restore\fR emits queries
to disable triggers on user tables before inserting the data then emits queries to
re-enable them after the data has been inserted. If the restore is stopped in the
middle, the system catalogs may be left in the wrong state.
.TP 0.2i
\(bu
\fBpg_restore\fR will not restore large objects for a single table. If
an archive contains large objects, then all large objects will be restored.
.PP
.PP
See also the \fBpg_dump\fR(1) documentation for details on
limitations of \fBpg_dump\fR.
.SH "EXAMPLES"
.PP
To dump a database:
.sp
.nf
$ \fBpg_dump mydb > db.out\fR
.sp
.fi
.PP
To reload this database:
.sp
.nf
$ \fBpsql -d database -f db.out\fR
.sp
.fi
.PP
To dump a database called mydb that contains
large objects to a \fItar\fR file:
.sp
.nf
$ \fBpg_dump -Ft -b mydb > db.tar\fR
.sp
.fi
.PP
To reload this database (with large objects) to an
existing database called newdb:
.sp
.nf
$ \fBpg_restore -d newdb db.tar\fR
.sp
.fi
.PP
To reorder database items, it is first necessary to dump the table of
contents of the archive:
.sp
.nf
$ \fBpg_restore -l archive.file > archive.list\fR
.sp
.fi
The listing file consists of a header and one line for each item, e.g.,
.sp
.nf
;
; Archive created at Fri Jul 28 22:28:36 2000
;     dbname: birds
;     TOC Entries: 74
;     Compression: 0
;     Dump Version: 1.4-0
;     Format: CUSTOM
;
;
; Selected TOC Entries:
;
2; 145344 TABLE species postgres
3; 145344 ACL species
4; 145359 TABLE nt_header postgres
5; 145359 ACL nt_header
6; 145402 TABLE species_records postgres
7; 145402 ACL species_records
8; 145416 TABLE ss_old postgres
9; 145416 ACL ss_old
10; 145433 TABLE map_resolutions postgres
11; 145433 ACL map_resolutions
12; 145443 TABLE hs_old postgres
13; 145443 ACL hs_old
.sp
.fi
Semi-colons are comment delimiters, and the numbers at the start of lines refer to the
internal archive ID assigned to each item.
.PP
Lines in the file can be commented out, deleted, and reordered. For example,
.sp
.nf
10; 145433 TABLE map_resolutions postgres
;2; 145344 TABLE species postgres
;4; 145359 TABLE nt_header postgres
6; 145402 TABLE species_records postgres
;8; 145416 TABLE ss_old postgres
.sp
.fi
could be used as input to \fBpg_restore\fR and would only restore
items 10 and 6, in that order.
.sp
.nf
$ \fBpg_restore -L archive.list archive.file\fR
.sp
.fi
.SH "HISTORY"
.PP
The \fBpg_restore\fR utility first appeared in
PostgreSQL 7.1.
.SH "SEE ALSO"
\fBpg_dump\fR(1), \fBpg_dumpall\fR(1), \fBpsql\fR(1), \fIPostgreSQL Administrator's Guide\fR

