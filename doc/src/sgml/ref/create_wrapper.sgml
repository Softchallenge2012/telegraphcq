<!--
$Header: /project/eecs/db/cvsroot/postgres/doc/src/sgml/ref/create_wrapper.sgml,v 1.2 2003/07/17 05:18:44 sailesh Exp $
PostgreSQL documentation
-->

<refentry id="SQL-CREATEWRAPPER">
 <refmeta>
  <refentrytitle id="SQL-CREATEWRAPPER-TITLE">
   CREATE WRAPPER 
  </refentrytitle>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>
   CREATE WRAPPER 
  </refname>
  <refpurpose>
   define a new wrapper 
  </refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <refsynopsisdivinfo>
   <date>2000-06-25</date>
  </refsynopsisdivinfo>

<synopsis>CREATE WRAPPER <replaceable class="PARAMETER">wrapper</replaceable> ( init=<replaceable class="PARAMETER">function</replaceable>,
next=<replaceable class="PARAMETER">function</replaceable>,
done=<replaceable class="PARAMETER">function</replaceable>,
[rescan=<replaceable class="PARAMETER">function</replaceable>] )
[WITH WRAPPERINFO <replaceable class="PARAMETER">key</replaceable>=<replaceable class="PARAMETER">value</replaceable>, [...] ]  
</synopsis> 

 </refsynopsisdiv>

 <refsect1 id="SQL-CREATEWRAPPER-description">
 <title>Description</title>
  <para>
   The <command>CREATE WRAPPER</command> command groups together the functions
   which implement data acquisition with other configuration information.  A 
   wrapper consists of an initialization function, a next function, a done 
   function and possibly a rescan function.  For more information on these 
   functions, please see the Wrapper clearinghouse documentation. 
  </para>
 </refsect1>

 <refsect1 id="SQL-CREATEWRAPPER-inputs">
  <title>Inputs</title>
  <para>
   <variablelist>
    <varlistentry>
     <term><replaceable class="parameter">wrapper</replaceable></term>
     <listitem>
      <para>
       The name of the wrapper.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><replaceable class="parameter">init</replaceable></term>
     <listitem>
      <para>
       the name of the initialization function.  This function must have
       previously been declared using the CREATE FUNCTION command. 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><replaceable class="parameter">next</replaceable></term>
     <listitem>
      <para>
       the name of the next function.  This function must have
       previously been declared using the CREATE FUNCTION command. 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><replaceable class="parameter">done</replaceable></term>

     <listitem>
      <para>
       the name of the done function.  This function must have
       previously been declared using the CREATE FUNCTION command. 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><replaceable class="parameter">rescan</replaceable></term>

     <listitem>
      <para>
       the name of the rescan function.  This function must have
       previously been declared using the CREATE FUNCTION command. 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><replaceable class="parameter">WRAPPERINFO</replaceable></term>
     <listitem>
      <para>
       Each wrapper can optionally have a set of key/value pairs associated 
       with it which provide configuration information. these values should 
       be entered as a comma separated list of key=value pairs. 
      </para>
     </listitem>
    </varlistentry>
    </variablelist>
  </para>
 </refsect1>

 <refsect1 id="SQL-CREATEWRAPPER-diagnostics">
  <title>Diagnostics</title>

  <msgset>
   <msgentry>
    <msg>
     <msgmain>
      <msgtext>
       <simpara><computeroutput>CREATE</computeroutput></simpara>
      </msgtext>
     </msgmain>
    </msg>

    <msgexplan>
     <para>
      Message returned if wrapper is successfully created.
     </para>
    </msgexplan>
   </msgentry>


   <msgentry>
    <msg>
     <msgmain>
      <msgtext>
       <simpara><computeroutput>ERROR</computeroutput></simpara>
      </msgtext>
     </msgmain>
    </msg>

    <msgexplan>
     <para>
      Message returned if wrapper creation failed.  
     </para>
    </msgexplan>
   </msgentry>
  </msgset>
 </refsect1>

 <refsect1 id="SQL-CREATEWRAPPER-examples">
  <title>Examples</title>
   <para>
   Create a wrapper which will process CSV data

   <programlisting>
    CREATE WRAPPER mycsvwrapper (
    init=csv_init,
    next=csv_next,
    done=csv_done);
   </programlisting>
   </para>
   </refsect1>
 <refsect1 id="SQL-CREATEWRAPPER-compatibility">
  <title id="SQL-CREATEWRAPPER-compatibility-title">Compatibility</title>
  <para>
   The <command>CREATE WRAPPER</command> is a <productname>TelegraphCQ</productname> extension and
   is not part of either SQL99 or SQL99. It is subject to change in
   future releases of <productname>TelegraphCQ</productname>.
  </para>
 </refsect1>

 <refsect1>
  <title>See Also</title>

  <simplelist type="inline">
   <member><xref linkend="sql-dropwrapper"></member>
   <member><xref linkend="sql-alterstream"></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->
