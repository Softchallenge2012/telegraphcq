.\\" auto-generated by docbook2man-spec $Revision: 1.25 $
.TH "EXECUTE" "l" "2002-11-22" "SQL - Language Statements" "SQL Commands"
.SH NAME
EXECUTE \- execute a prepared query
.SH SYNOPSIS
.sp
.nf
   EXECUTE \fIplan_name\fR [ (\fIparameter\fR [, ...] ) ]
  
.sp
.fi
.SS "INPUTS"
.PP
.TP
\fB\fIplan_name\fB\fR
The name of the prepared query to execute.
.TP
\fB\fIparameter\fB\fR
The actual value of a parameter to the prepared query.
This must be an expression yielding a value of a type
compatible with
the data-type specified for this parameter position in the
\fBPREPARE\fR statement that created the prepared
query.
.PP
.SH "DESCRIPTION"
.PP
\fBEXECUTE\fR is used to execute a previously prepared
query. Since prepared queries only exist for the duration of a
session, the prepared query must have been created by a
\fBPREPARE\fR statement executed earlier in the
current session.
.PP
If the \fBPREPARE\fR statement that created the query
specified some parameters, a compatible set of parameters must be
passed to the \fBEXECUTE\fR statement, or else an
error is raised. Note that (unlike functions) prepared queries are
not overloaded based on the type or number of their parameters: the
name of a prepared query must be unique within a database session.
.PP
For more information on the creation and usage of prepared queries,
see PREPARE [\fBprepare\fR(l)].
.SH "COMPATIBILITY"
.SS "SQL92"
.PP
SQL92 includes an \fBEXECUTE\fR statement, but it is
only for use in embedded SQL clients. The
\fBEXECUTE\fR statement implemented by
PostgreSQL also uses a somewhat
different syntax.
